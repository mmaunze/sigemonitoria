/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sigemonitoria.vista.actualizacao;

import java.util.logging.Level;
import javax.persistence.EntityManagerFactory;
import static javax.persistence.Persistence.createEntityManagerFactory;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;
import static javax.swing.UIManager.setLookAndFeel;
import javax.swing.UnsupportedLookAndFeelException;
import sigemonitoria.controller.DoenteJpaController;
import sigemonitoria.modelo.Doente;
import sigemonitoria.modelo.Utilizador;

/**
 *
 * @author Meldo Maunze
 */
public class InserirNid extends javax.swing.JFrame {
    Doente doente ;
    Utilizador usuario;

    /**
     * Creates new form InserirNid
     * @param usuario
     */
    public InserirNid(Utilizador usuario ) {
        initComponents();
        this.usuario = usuario; 
      
    }

    private InserirNid() {
          initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nidTXT = new javax.swing.JLabel();
        nidInput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inserir o NID");

        nidTXT.setText("Inserir o Nid que pretende Actualizar");

        nidInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nidInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nidInput)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nidTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nidTXT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nidInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nidInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nidInputActionPerformed
        var nidValue = nidInput.getText().trim();
        EntityManagerFactory emf = createEntityManagerFactory("sigemonitoriaPU");
        DoenteJpaController doentes = new DoenteJpaController(emf);

        if (nidValue.matches("\\d+")) {
            if (nidValue.length() == 5) {
         
                if (doentes.findDoente(nidValue) != null) {
                    var paciente = doentes.findDoente(nidValue);
                  
                    JOptionPane.showMessageDialog(this, "\nNome: " + paciente.getNome() + "\nNID: " + paciente.getNid() + "\nIdade: " + paciente.getIdade(), "Doente Encontrado", JOptionPane.INFORMATION_MESSAGE);
                    JOptionPane.showMessageDialog(this, "Como o doente foi encontrado, \nsera redirrecionado a tela de actualizacao", "Redireccionando", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                    var tela1 = new UpdateInformacaoBasicaPaciente(usuario, paciente);
                    try {
                        setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
                    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(InserirNid.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    tela1.setLocationRelativeTo(null);
                    tela1.setVisible(true);
                }else {
                    this.dispose();
           JOptionPane.showMessageDialog(this, "Nenhum doente Encontrado com o NID Fornecido,\n Nada sera feito\nInformar o NID Correcto", "Nenhum doente Encontrado", JOptionPane.WARNING_MESSAGE); 
                }
            } else {
                showMessageDialog(this, "O NID do Paciente deve ter exatamente 5 dígitos.", "5 Digitos Obrigatorios", ERROR_MESSAGE);
                nidInput.requestFocus();      
            }
        } else {
            showMessageDialog(this, "O NID do Paciente deve conter apenas números.", "Apenas Numeros Permitidos", ERROR_MESSAGE);
            nidInput.requestFocus();
        }
    }//GEN-LAST:event_nidInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InserirNid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InserirNid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InserirNid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InserirNid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InserirNid().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField nidInput;
    private javax.swing.JLabel nidTXT;
    // End of variables declaration//GEN-END:variables
}
